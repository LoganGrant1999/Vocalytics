meta:
product_name: "Vocalytics"
codename: "TubeWhisper"
owner: "Logan Gibbons"
date_created: "2025-10-07"
target_launch: "2025-11-01"
version: "v1.0-MVP"
stack:
backend: "Node.js + Fastify (API + MCP Server)"
frontend: "React + Vite (Next + ChatGPT App widgets)"
database: "Supabase (PostgreSQL + Auth + Billing)"
external_apis:
- "YouTube Data API v3"
- "OpenAI API (GPT-4o-mini / GPT-4-turbo)"
- "Stripe API (subscription billing)"
deployment:
- "Vercel (frontend + landing page)"
- "Render / Fly.io (API server)"
- "Supabase (auth + usage + storage)"
environment:
node_version: "20.x"
runtime: "pnpm workspaces"
build: "pnpm -r build"
package_entry: "packages/server/src/index.ts"

problem_statement:
summary: >
Creators struggle to keep up with comments across growing YouTube channels.
Manual moderation drains hours, and default analytics ignore audience emotion.
Existing tools give numbers, not feeling — and no way to act instantly.
user_pain_points:
- "Creators spend 30–90 min daily moderating manually."
- "YouTube Studio shows metrics but no sentiment."
- "Toxicity and spam blur real fan feedback."
- "AI reply tools feel generic and disconnected from creator tone."
why_now:
- "ChatGPT App Store launch = early discoverability (Q4 2025)."
- "Creators already experimenting with AI co-pilots."
- "YouTube Data API + OpenAI make this technically lightweight."
- "Low-friction subscription model mirrors creator spend."

value_proposition:
statement: >
Vocalytics becomes a creator’s emotional dashboard for YouTube — a single
place to see how audiences feel and instantly craft authentic replies.
key_benefits:
- "Turns raw comments into clear emotional insight."
- "Shows which videos spark positivity vs frustration."
- "Auto-drafts authentic replies in the creator’s tone."
- "Saves hours per week on community engagement."
- "Feels native to YouTube and ChatGPT."

target_users:
primary_persona:
name: "Indie Creator"
profile:
- "10k–250k subs"
- "1–3 uploads per week"
- "Handles own comments"
- "Comfortable with AI tools"
- "Willing to pay $10–20 / mo for time savings"
secondary_personas:
- "Podcast hosts posting episodes to YouTube"
- "Small-brand social managers"
- "Micro-agencies servicing clients"

success_metrics:
prelaunch:
- "10 creator interviews by Oct 20"
- "3 private beta channels before launch"
postlaunch:
- "≥1000 installs by Dec 1"
- "≥5 % paid conversion within 30 days"
- "≥70 % weekly retention (free tier)"
- "NPS ≥ 8 among first 100 paid users"
- "≥95 % uptime on /healthz"

MVP Scope

scope_summary: >
Deliver a web + ChatGPT-embedded app where creators connect YouTube,
instantly see their latest uploads in a personalized dashboard, analyze
audience sentiment per video, generate AI replies, and upgrade via Stripe
when free-tier limits are hit.

Core Features
ID	Name	Description	Success Criteria
F1	YouTube OAuth Login	Secure Google OAuth (youtube.readonly) for channel access	User connects in < 60 s
F2	Fetch User Videos	List 10–20 latest uploads (thumbnail, title, stats)	Videos appear instantly after OAuth
F3	Persistent Video Analysis	Analyze and store sentiment + summary per video	Analysis persists and reloads in dashboard
F4	AI Comment Classification	Label each comment Positive / Neutral / Negative / Spam	≥85 % accuracy
F5	AI Reply Generation	1–3 tone-matched replies per comment	≥70 % tone alignment
F6	Channel Dashboard	Show videos grid + sentiment heatmap + usage bars	Visible “channel health” insight
F7	Video Detail Page	Tabs: Overview (sentiment chart + summary), Comments, Replies	Insight loads < 5 s
F8	Trends & Analytics	Plot avg sentiment over time + rank videos by emotion	Trend chart populated after ≥3 analyses
F9	Paywall Integration	Supabase + Stripe usage enforcement	Limits + upgrade flow work end-to-end

optional_features:

id: F10
name: "Analyze Next Recommendations"
description: "Suggest un-analyzed videos to encourage continued use."

id: F11
name: "Tone Memory"
description: "Persist creator style for future replies (Pro only)."

id: F12
name: "CSV Export"
description: "Allow Pro users to download sentiment data."

UX Flow

entry_point: "Connect YouTube → auto-populate dashboard with channel videos"

main_journey:

"Install Vocalytics → Connect YouTube"

"Dashboard shows recent uploads with sentiment placeholders"

"User clicks ‘Analyze’ → AI sentiment + summary + top comments appear"

"Trends chart updates automatically"

"User opens Replies tab → generate tone-matched responses"

"Hit free limit → upgrade modal → Stripe checkout"

"Pro user returns to see full channel history and analytics"

empty_state: "Connected but no analyses yet — click Analyze to see audience emotion."
tone_guidelines:

"Friendly, creator-to-creator voice"

"Quick, insightful, positive"

Monetization Model

pricing_tiers:

name: "Free"
features:

"Analyze 3 videos / month"

"10 AI replies / day"

"Basic dashboard and sentiment overview"

name: "Pro — $12 / mo"
features:

"Unlimited analyses + replies"

"Auto-reply posting"

"Trends analytics + Tone Memory + Export"
checkout: "Stripe Checkout via vocalytics.app/upgrade"

Go-to-Market

prelaunch:

"Interview 10 creators (reddit & DMs)"

"Publish teaser site vocalytics.app"

"Short demo clip on X / TikTok / Reddit"

launch_channels:

"ChatGPT App Store"

"Product Hunt (Nov 1)"

"Reddit r/YouTube & r/Productivity"

viral_hooks:

"‘Emotional scorecard’ share card per video"

"Beta testimonials + before/after replies"

Data Model (Updated)

tables:

name: users
description: "Creator record + subscription tier + usage counts."
columns:

id: uuid PK

email: text

tier: text enum [free, pro]

comments_analyzed_count: int

replies_generated_count: int

reset_date: date

subscribed_until: timestamptz

stripe_customer_id: text

stripe_subscription_id: text

created_at: timestamptz default now()

updated_at: timestamptz default now()

name: user_videos
description: "Cached YouTube uploads per user for dashboard population."
columns:

user_id: uuid FK → users.id

video_id: text

title: text

thumbnail_url: text

published_at: timestamptz

stats: jsonb (views, likes, comments)

fetched_at: timestamptz default now()

primary key: (user_id, video_id)

name: video_analyses
description: "Stored sentiment analyses for each (video, user)."
columns:

user_id: uuid FK → users.id

video_id: text

analyzed_at: timestamptz default now()

sentiment: jsonb {pos, neu, neg}

score: numeric

top_positive: jsonb

top_negative: jsonb

summary: text

raw: jsonb

primary key: (user_id, video_id, analyzed_at)

name: usage_events
description: "Audit log for usage tracking."

name: stripe_events
description: "Webhook store for billing."

API (Incremental Additions)

GET /api/youtube/videos?mine=true — list recent uploads for connected user

POST /api/analysis/:videoId?persist=true — run and store sentiment analysis

GET /api/analysis/:videoId — fetch latest analysis for video

GET /api/analysis — list all analyses for dashboard overview

GET /api/analysis/trends — return sentiment timeseries

(existing endpoints for fetch-comments, generate-replies, summarize-sentiment remain)

Frontend UI Overview

Landing Page: Hero + 3 feature cards (Sentiment Analysis, AI Replies, YouTube Integration) + Connect CTA

Dashboard:

Channel overview with video thumbnails + sentiment heatmap

Quick stats (total videos analyzed, avg sentiment, replies sent)

Trends chart (avg sentiment vs time)

Upgrade prompt at limit

Video Detail: Overview (tab sentiment + summary), Comments, Replies

Billing: Free vs Pro comparison + Stripe integration

Error & Paywall Dialogs, Cookie Banner, Debug Drawer (preserved)

Milestones (Updated)

week_1 (Oct 7-13): Backend auth + fetch comments
week_2 (Oct 14-20): OAuth + list videos endpoint + mock dashboard
week_3 (Oct 21-27): Persistent analysis tables + trends chart + UI integration
week_4 (Oct 28-Nov 1): Stripe checkout + beta + launch submission

North Star

Become the creator’s emotional analytics co-pilot —
the first place YouTubers check to understand how their audience feels and what to say next.